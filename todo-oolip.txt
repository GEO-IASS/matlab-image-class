TODO-list for project OOLIP
---------------------------

TODO recalage:

- ajouter regularisation des fonctions

- passer en coordonnees physiques (essayer avec BF)

- refaire quelques traitements de demos en utilisant class Image (2010.06.26)
    + segmentation par LPE
    + squeletisation

    
class Image
===========    
- small convenient functions (2010.11.26)
    + imRescale (find a better name) 
    + concatenation (cat, horzcat, vertcat)
    + operateur min et max: un ou deux arguments
        -> un argument: renvoie le max dans l'image
        -> deux arguments: renvoie nouvelle image avec calcul du min ou du max
    + cast : remplacer 'convertType' par cast (2010.12.13)
        -> pas sur, peut-etre preferable garder cast pour transformer en type primitifs
        
- Split class Image into a specific library ? (2010.11.04)
    + remove some functions (think about a way to have additional methods
        in a separate directory)
        o resample
        o subsample
        o (backward)transform
    + can re-organize unit tests
    + can start a GUI-based prog like ImageM. (ImAGem ? ImaGEM ?)

- image creation
    specify how to use (static constructor or constructor),
    with all psb (2D, 3D, vector, color, movie)
    and implement

- inclure info sur dynamique des niveaux de gris (2010.12.03)
    + grayRange pour dynamique des niveaux de gris de l'image (min et max des elements)
    + displayRange pour dynamique utilisee pour l'affichage
    
- Think about other image implementations:
    - ImageView: use data from another image, but cropped (2010.06.24)
	   
- stocker le nom des canaux ?
    + channelNames

- manage image anatomical orientation (2010.10.22)

- enhance filtering of some functions (2010.07.13)
    + open, close, dilate, erode
    + filter
    
- use 'imageSize' field, that correspond to number of pixels for physical
    dimensions (2010.10.12)
    
        
- clone function ?                                                              +
    - ou alors un constructeur avec une image et un nouveau tableau de donnees
    - ou alors une fonction duplicate, avec psb de changer certaines infos
        (calibration spatiale, buffer...) (2010.06.29)

- Add support for Region of Interest (2010.07.13)   


Interpolators 
=============
    
- passer LinearInterpolator en generique 2D/3D (2010.06.17)

- add management of gradient image by interpolator classes (2010.11.24)

- implementer un gradientEvaluator qui calcule le gradient pour les points
    demandes. (2010.10.10)

- implementer la methode resample (2010.06.17)
    - en entree un resampler, ou deux tableaux de points, ou une image
    - appliquer a ImageFunction
    - appliquer a Image (passer par un interpolateur)

- implementer re echantillonnage d'une image 3D par une coupe (2010.10.10)
    resampleSlicer(IMGFUN, PLANE, UDATA, VDATA);
    sliceResampler(IMGFUN, PLANE, UDATA, VDATA);


    
Parametric transforms
=====================

- Idealement, ce serait mieux que la composition de deux transfos affine
    renvoie une transfo qui herite elle-meme de AffineTransform (2010.06.17)

- stocker des parametres de 'scaling' par defaut pour les transformations
    classiques (2010.10.12)
    + definir une 'valeur moyenne' typique, ou alors le parameterScaling 
    + definir une 'variabilite' par defaut
    

Metriques 
=========

- mieux gerer les points qui tombent en dehors des fenetres.
    avant: on calcule moyenne sur les points dans les 2 fenetres
    maintenant : on affecte une valeur par defaut
    a faire:
        + ajouter setter pour valeur par defaut (dans interpolateur)
        + gerer les points en dehors pour calculer les gradients
        
- comments gerer les points d'echantillonnage ? Pour le moment, ils sont
    stockes dans la classe, mais il serait plus juste de les transmettre
    en parametres ?
    Dans ce cas, utiliser une classe pecifique pour eviter les copies de
    memoire

Optimisateurs
=============

- gerer plusieurs types de condition d'arret (2010.12.03)
    + max_iter
    + precision en x
    + precision en f

    
Divers
======

- echantillonneurs varies :
    + plus denses au centre de l'image       
        
- implementer une classe ImageFilter (ImageToImageFilter ?) (2010.06.17)
    - methode abstraite "applyTo(Img):Img"

- think about a way to measure parameters
    + use consistent interface for returning params
    + use Table object ?
